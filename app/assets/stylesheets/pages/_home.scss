.landing {
  margin-bottom: 0px;
  top: 0;
  left: 0;
  background-color: #2184B2;
}
.landing.ruby-background {
  background: url(https://s3.amazonaws.com/infinum.web.production/repository_items/files/000/000/523/original/infinum_best_ruby_on_rails_refactoring_talks_cr.png?1437459091) no-repeat fixed #0e2439;
  background-size: cover;
}

.landing .with-search-form .header {
  position: relative;
  z-index: 1;
  width: 100%;
  padding: 0px;
  box-sizing: border-box;
  background: none;
}
.landing .with-search-form {
  padding-top: 6em;
  padding-top: 11vh;
  padding-bottom: 8em;
  box-sizing: border-box;
  width: 100%;
  height: calc(100vh - 150px);
  min-height: 690px;
  position: relative;
}
.landing .hero-unit {
  background: none;
  padding: 10px;
}
.hero-unit {
  padding: 60px;
  margin-bottom: 30px;
  font-size: 18px;
  font-weight: 200;
  line-height: 30px;
  color: inherit;
  background-color: #eee;
  border-radius: 6px;
}
.landing .with-search-form #ruby1 {
  width: 350px;
  display: none;
}
.landing #ruby1 {
  width: 500px;
}
img {
  border: 0;
}
img {
  width: auto\9;
  height: auto;
  max-width: 100%;
  vertical-align: middle;
  border: 0;
}
/* Navbar search form */
.navbar-wagon-search {
  flex: 0 1 300px;
  display: flex;
  justify-content: flex-end;
  padding: 0 10px;
  position: relative;
  margin-top: -75px;
}
.navbar-wagon-search-btn {
  line-height: 40px;
  color: #E6E6E6;
  border: none;
  background: transparent;
  position: absolute;
  right: 14px;
  top: -2px;
  z-index: 1;
}
.navbar-wagon-search-input {
  flex: 0 1 300px;
  transition: all 0.15s ease;
  line-height: 40px;
  font-weight: lighter;
  color: #666666;
  border: 1px solid #E6E6E6;
  border-radius: 5px;
  padding: 0 10px;
  font-size: 14px;
  outline: none;
}
.navbar-wagon-search-input:focus  {
  border: 1px solid #CCCCCC;
}

.jobs {
  background-color: wh;
}
//avatar carousel
.top-developers {
 text-align:center;
 padding-bottom: 20px;
}
.avatar_developer {
 border-radius: 50%;
 width:50px;
 height: 50px;
}


@mixin clearfix() {
 &:before,
 &:after {
   content: " "; // 1
   display: table; // 2
 }
 &:after {
   clear: both;
 }
}


body {
 background: #f5f5f5 ;
}

$card-width: 670px;
$card-gap: 30px;
$card-total-width: $card-width + $card-gap;
$cards-quantity: 4;
$cards-speed: 50s;

.cards {
 overflow: hidden;
 .cards__list {
   display: flex;
   align-items: stretch;
   align-content: center;
   align-self: center;
   width: $card-total-width * $cards-quantity;
   padding: 0;
   @include clearfix;

   &:hover .card{
     -webkit-animation-play-state:paused;
     -moz-animation-play-state:paused;
     animation-play-state:paused;
   }

   li {
     float: left;
   }
 }
 .card {
   width: $card-width;
   animation-duration: $cards-speed;
   animation-iteration-count: infinite;
   animation-timing-function: linear;
   text-align: center;
   margin: 0 $card-gap 0 0;
   $card-padding: 20px;
   overflow: hidden;
   background: #fff;
   padding: $card-padding;

   & > a {
     color: inherit !important;
   }


   blockquote {
     padding: .5em 1.5em;
     font-size: 2rem;
     font-style: normal;
     font-weight: 300;
     line-height: 1.3em;
     margin: 0;

     cite {
       display: block;
       font-size: 1.2rem;
       text-transform: uppercase;
       font-style: normal;
     }
   }
 }
}
$i: $cards-quantity;
@while $i > 0 {
 #slide-card-#{$i} {
   animation-name: cardslide-#{$i};
 }

 @-webkit-keyframes cardslide-#{$i} {

   // Creating percentages based on cards quantity
   $j: $cards-quantity;
   $moved: false;
   @while $j > 0 {
     $percentage: (100 / $cards-quantity) * ($cards-quantity - $j);

     @if $moved == false {
       #{$percentage}% {
         transform: translateX(- $card-total-width * ($cards-quantity - $j));
       }
       @if ($cards-quantity - $j) == $i {
         #{$percentage + 0.01}% {
           transform: translateX($card-total-width * ($cards-quantity - ($cards-quantity - $j)));
         }
         $moved: true;
       }
     } @else {
       #{$percentage}% {
         transform: translateX($card-total-width * $j);
       }
     }

     $j: $j - 1;
   }
   @if $i == $cards-quantity {
     99.99% {
       transform: translateX(- $cards-quantity * $card-total-width);
     }
   }

   100% {
     transform: translateX(0);
   }
 }

 $i: $i - 1;
}
